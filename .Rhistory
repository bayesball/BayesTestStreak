) |>
arrange(date) |>
pull(H) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_400 <- retro_data |>
group_by(bat_id) |>
summarize(AB = sum(ab_fl)) |>
filter(AB >= 400) |>
pull(bat_id)
reg_streaks <- players_400 |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_400)
streaky_measure <- function(batter, retro_data) {
retro_data |>
filter(bat_id == batter, bat_event_fl == TRUE) |>
mutate(
HR = ifelse(event_cd == 23, 1, 0),
date = substr(game_id, 4, 12)
) |>
arrange(date) |>
pull(HR) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_400 <- retro_data |>
group_by(bat_id) |>
summarize(AB = sum(ab_fl)) |>
filter(AB >= 400) |>
pull(bat_id)
reg_streaks <- players_400 |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_400)
hist(reg_streaks$S)
mean(reg_streaks$S < 1)
mean(reg_streaks$S < .9)
d <- rgeom(1000, .05)
head(d)
M <- mean(d)
var(d) / M / (M + 1)
streaks(0, 1, 0, 0, 0, 0, 1)
streaks(c(0, 1, 0, 0, 0, 0, 1))
streaky_season <- function(retro_data, season, minPA = 100){
streaks <- function(y) {
x <- rle(y)
class(x) <- "list"
as_tibble(x)
}
streaky_measure <- function(batter, retro_data) {
retro_data |>
filter(bat_id == batter, bat_event_fl == TRUE) |>
mutate(
HR = ifelse(event_cd == 23, 1, 0),
date = substr(game_id, 4, 12)
) |>
arrange(date) |>
pull(HR) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n()) |>
filter(PA >= minPA) |>
pull(bat_id)
reg_streaks <- players_minPA |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_minPA,
Season = season) |>
select(Season, bat_id, S)
}
out <- streaky_season(retro2016, 2016)
head(out)
out <- streaky_season(retro2016, 2016, 200)
out <- streaky_season(retro2016, 2016, 300)
streaky_season <- function(retro_data, season, minPA = 100){
streaks <- function(y) {
x <- rle(y)
class(x) <- "list"
as_tibble(x)
}
streaky_measure <- function(batter, retro_data) {
retro_data |>
filter(bat_id == batter, bat_event_fl == TRUE) |>
mutate(
HR = ifelse(event_cd == 23, 1, 0),
date = substr(game_id, 4, 12)
) |>
arrange(date) |>
pull(HR) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n()) |>
filter(PA >= minPA) |>
pull(bat_id)
HR_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n(),
HR = sum(event_cd = 23)) |>
filter(PA >= minPA)
reg_streaks <- players_minPA |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_minPA,
Season = season) |>
select(Season, bat_id, S)
inner_join(reg_streaks, HR_minPA,
by = c("bat_id"))
}
out <- streaky_season(retro2016, 2016, 300)
head(out)
HR_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n(),
HR = sum(event_cd = 23)) |>
filter(PA >= minPA)
minPA <- 300
HR_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n(),
HR = sum(event_cd = 23)) |>
filter(PA >= minPA)
head(HR_minPA)
streaky_season <- function(retro_data, season, minPA = 100){
streaks <- function(y) {
x <- rle(y)
class(x) <- "list"
as_tibble(x)
}
streaky_measure <- function(batter, retro_data) {
retro_data |>
filter(bat_id == batter, bat_event_fl == TRUE) |>
mutate(
HR = ifelse(event_cd == 23, 1, 0),
date = substr(game_id, 4, 12)
) |>
arrange(date) |>
pull(HR) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n()) |>
filter(PA >= minPA) |>
pull(bat_id)
HR_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n(),
HR = sum(event_cd == 23)) |>
filter(PA >= minPA)
reg_streaks <- players_minPA |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_minPA,
Season = season) |>
select(Season, bat_id, S)
inner_join(reg_streaks, HR_minPA,
by = c("bat_id"))
}
out <- streaky_season(retro2016, 2016, 300)
head(out)
ggplot(out, aes(HR, S)) + geom_point()
filter(out, HR == 30)
source("~/Library/CloudStorage/Dropbox/2024 WORK/Kentucky work/streakiness/streaky_season.R", echo=TRUE)
streaky_season <- function(retro_data, season, minPA = 100){
streaks <- function(y) {
x <- rle(y)
class(x) <- "list"
as_tibble(x)
}
streaky_measure <- function(batter, retro_data) {
retro_data |>
filter(bat_id == batter, bat_event_fl == TRUE) |>
mutate(
HR = ifelse(event_cd == 23, 1, 0),
date = substr(game_id, 4, 12)
) |>
arrange(date) |>
pull(HR) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n()) |>
filter(PA >= minPA) |>
pull(bat_id)
HR_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n(),
HR = sum(event_cd == 23)) |>
filter(PA >= minPA)
reg_streaks <- players_minPA |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_minPA,
Season = season) |>
select(Season, bat_id, S)
inner_join(reg_streaks, HR_minPA,
by = c("bat_id")) |>
select(Season, bat_id, PA, HR, S)
}
out <- streaky_season(retro2016, 2016, 300)
head(out)
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2023.Rdata")
library(BayesTestStreak)
ks_id <-
People |>
filter(nameLast == "Schwarber", nameFirst == "Kyle") |>
pull(retroID)
d <- streak_data(ks_id, d2023, "HR")
sp <- find_spacings(d)
head(sp)
bayes_factor_logK(d)
bayes_factor_logK(d, 3)
geometric_plot(sp)
permutation_test(d)
1627.75 - 193.08 - 248.61 - 791.37 - 64.56
1627.75 - 193.08 - 248.61 - 791.37 - 64.56 + 3000 - 1079.01
lowercase("AAB")
lower.case("AAB")
library(stringr)
lower_case
str_to_lower("ABC")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2023.Rdata")
dir()
source("streaky_season.R")
out <- streaky_season(d2023, 2023)
head(out)
hist(out$S)
ggplot(out,aes(HR, S)) + geom_point()
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2022.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2021.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2020.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2019.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2018.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2018.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2017.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2016.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2015.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2014.Rdata")
names(d2023)
names(pbp.14)
names(d2015)
d <- rbind(pbp.14,
d2015[, 2:98])
d1 <- rbind(pbp.14,
d2015[, 2:98],
d2016[, 2:98],
d2017[, 2:98],
d2018[, 2:98])
d2 <- rbind(
d2019[, 2:98],
d2020[, 2:98],
d2021[, 2:98],
d2022[, 2:98],
d2023[, 2:98]
)
d12 <- rbind(d1, d2x)
d12 <- rbind(d1, d2)
getwd()
save(d12, "pbp.2014.2023.Rdata")
save(d12, file = "pbp.2014.2023.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.1954.1959.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.1960.1979.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.1980.1999.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2000.2013.Rdata")
load("~/Library/CloudStorage/Dropbox/Google Drive/Retrosheet/pbp.2014.2023.Rdata")
d12[1:5, 1]
substr(d12[1, 1], 4, 7)
names(d12)[1]
streaky_season <- function(retro_data, season, minPA = 100){
require(dplyr)
require(stringr)
names(retro_data) <- str_to_lower(names(retro_data))
retro_data <- filter(retro_data,
as.numeric(substr(game_id, 4, 7)) == season)
streaks <- function(y) {
x <- rle(y)
class(x) <- "list"
as_tibble(x)
}
streaky_measure <- function(batter, retro_data) {
retro_data |>
filter(bat_id == batter, bat_event_fl == TRUE) |>
mutate(
HR = ifelse(event_cd == 23, 1, 0),
date = substr(game_id, 4, 12)
) |>
arrange(date) |>
pull(HR) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n()) |>
filter(PA >= minPA) |>
pull(bat_id)
HR_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n(),
HR = sum(event_cd == 23)) |>
filter(PA >= minPA)
reg_streaks <- players_minPA |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_minPA,
Season = season) |>
select(Season, bat_id, S)
inner_join(reg_streaks, HR_minPA,
by = c("bat_id")) |>
select(Season, bat_id, PA, HR, S)
}
out <- streaky_season(d12, 2014)
head(out)
out <- streaky_season(d12, 2014, 200)
head(out)
OUT5 <- NULL
for (season in 2014:2023){
out <- streaky_season(d12, season, 200)
OUT5 <- rbind(OUT5, out)
print(season)
}
OUT4 <- NULL
for (season in 2000:2013){
out <- streaky_season(pbp.00.13, season, 200)
OUT4 <- rbind(OUT4, out)
print(season)
}
season
retro_data <- pbp.00.13
retro_data[1,]
season <- 2000
minPA <- 200
names(retro_data) <- str_to_lower(names(retro_data))
retro_data <- filter(retro_data,
as.numeric(substr(game_id, 4, 7)) == season)
retro_data <- dplyr::filter(retro_data,
as.numeric(substr(game_id, 4, 7)) == season)
retro_data <- dplyr::filter(retro_data,
as.numeric(substr(as.character(game_id), 4, 7))
== season)
names(retro_data)
str(retro_data)
retro_data[, 1] <- as.character(retro_data[, 1])
retro_data <- dplyr::filter(retro_data,
as.numeric(substr(game_id, 4, 7)) == season)
season
Season <- substr(retro_data$game_id, 4, 7)
table(Season)
retro_data <- subset(retro_data,
as.numeric(substr(retro_data$game_id, 4, 7)) == season)
retro_data |>
mutate(game_id = as.character(game_id),
Season = as.numeric(substr(game_id, 4, 7))) ->
retro_data
table(retro_data$Season)
str(retro_data$Season)
retro_data <- filter(retro_data, Season == season)
sum(retro_data$Season == 2000)
dim(filter(retro_data, Season == 2000))
retro_data <- filter(retro_data, Season == season)
year <- 2000
retro_data <- filter(retro_data, season == year)
print(dim(retro_data))
streaky_season <- function(retro_data, year, minPA = 100){
require(dplyr)
require(stringr)
names(retro_data) <- str_to_lower(names(retro_data))
retro_data |>
mutate(game_id = as.character(game_id),
season = as.numeric(substr(game_id, 4, 7))) ->
retro_data
retro_data <- filter(retro_data, season == year)
streaks <- function(y) {
x <- rle(y)
class(x) <- "list"
as_tibble(x)
}
streaky_measure <- function(batter, retro_data) {
retro_data |>
filter(bat_id == batter, bat_event_fl == TRUE) |>
mutate(
HR = ifelse(event_cd == 23, 1, 0),
date = substr(game_id, 4, 12)
) |>
arrange(date) |>
pull(HR) |>
streaks() |>
filter(values == 0) |>
summarize(S = var(lengths) / mean(lengths) /
(mean(lengths) + 1))
}
players_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n()) |>
filter(PA >= minPA) |>
pull(bat_id)
HR_minPA <- retro_data |>
filter(bat_event_fl == TRUE) |>
group_by(bat_id) |>
summarize(PA = n(),
HR = sum(event_cd == 23)) |>
filter(PA >= minPA)
reg_streaks <- players_minPA |>
set_names() |>
map(streaky_measure, retro_data) |>
list_rbind() |>
mutate(bat_id = players_minPA,
Season = season) |>
select(Season, bat_id, S)
inner_join(reg_streaks, HR_minPA,
by = c("bat_id")) |>
select(Season, bat_id, PA, HR, S)
}
OUT4 <- NULL
for (season in 2000:2013){
out <- streaky_season(pbp.00.13, season, 200)
OUT4 <- rbind(OUT4, out)
print(season)
}
OUT3 <- NULL
for (season in 1980:1999){
out <- streaky_season(pbp.80.99, season, 200)
OUT3 <- rbind(OUT3, out)
print(season)
}
OUT2 <- NULL
for (season in 1960:1979){
out <- streaky_season(pbp.60.79, season, 200)
OUT2 <- rbind(OUT2, out)
print(season)
}
OUT1 <- NULL
for (season in 1954:1959){
out <- streaky_season(pbp.60.79, season, 200)
OUT1 <- rbind(OUT1, out)
print(season)
}
OUT1 <- NULL
for (season in 1954:1959){
out <- streaky_season(pbp5459, season, 200)
OUT1 <- rbind(OUT1, out)
print(season)
}
OUT <- rbind(OUT1, OUT2, OUT3, OUT4, OUT5)
table(OUT$Season)
People |>
filter(nameLast == "Aaron",
nameFirst == "Hank")
People |>
filter(nameLast == "Aaron",
nameFirst == "Hank") |>
pull(retroID) -> ha_id
head(OUT)
ggplot(filter(OUT, bat_id == ha_id),
aes(Season, S)) +
geom_point() +
geom_hline(yintercept = 1, color = "red")
People |>
filter(nameLast == "Schmidt",
nameFirst == "Mike") |>
pull(retroID) -> ms_id
ggplot(filter(OUT, bat_id == ms_id),
aes(Season, S)) +
geom_point() +
geom_hline(yintercept = 1, color = "red")
setwd("/Users/jimalbert/Library/CloudStorage/Dropbox/2024 WORK/Kentucky work/streakiness")
write_csv("OUT", "streaky_data.csv")
write_csv(OUT, "streaky_data.csv")
